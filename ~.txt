Web
https://www.docker.com/products/docker-desktop/
-- n-oе кол-во попыток установить по гуглы, финал вариант установки docker для windows server 2016 ниже
-- https://forums.docker.com/t/docker-desktop-cannot-be-installed-at-windows-server-2016/83748 
   You will need to install Docker Desktop 2.0.0.3 I believe. Docker is no longer updating for 2016
--- https://docs.docker.com/desktop/previous-versions/2.x-windows/
-- для windows server 2019
--- сmd bcdedit /set hypervisorlaunchtype off
-- в win 2019 сервер когда не работает докер и после обновления системы
--- сmd bcdedit /enum
--- сmd bcdedit /set hypervisorlaunchtype auto
--- перезагрузка
--- https://nodejs.org/en
https://www.figma.com/file/Q10u6OrUb4lIddWxnrdbDn/HeadHunter-Database%2B?type=whiteboard&node-id=0-1&t=dumCjZimyQQReFkt-0

https://hub.docker.com/_/postgres/tags?page=2
https://www.pgadmin.org/download/
https://www.npmjs.com/package/express
http://localhost:3000/ и http://localhost:3000 одно и то же
https://www.postman.com/downloads/
...
https://chat.openai.com/
https://jwt.io/
https://www.epochconverter.com/
---l10
https://www.npmjs.com/package/multer

Cmd
docker --version

Extensions
yaml - для настройки docker в yaml файле
PostgreSQL
Docker

console webbrowser
new Date()
let a = new Date()
a.toISOString()

Termnal vsc (node) (лежит по D:\!nodejs\hh.kz)
docker-compose up --build (--build в первый раз используется при скачивании далее не нужно)
docker-compose up (+ по умолчанию запускает docker-compose.yml)
npm init 
npm i express
node server.js
npm start
npm run dev
npm i nodemon -g (глобально устанавливается)
npm i nodemon (локально)
npm i morgan (можно видеть различные логи)
npm i multer (для того чтобы файлы загружать)
...
npm install sequelize pg pg-hstore
npm i sequelize-cli
npm i sequelize-cli -g
npx sequelize-cli migration:generate --name create-company
npx sequelize-cli migration:generate --name create-role
npx sequelize-cli migration:generate --name create-user
npx sequelize-cli db:migrate
npx sequelize-cli migration:generate --name create-auth-code
npx sequelize-cli db:migrate
npx sequelize-cli db:migrate:undo:all
npm install nodemailer
npx sequelize-cli db:migrate:undo --name 20230621141718-create-auth-code.js
npx sequelize-cli db:migrate
npx sequelize-cli db:seed --seed seedRole.js
...
npm i passport jsonwebtoken
npm i passport-jwt
-
npx sequelize-cli migration:generate --name create-country
npx sequelize-cli migration:generate --name create-city
npx sequelize-cli db:migrate
npx sequelize-cli seed:generate --name seed_countries
npx sequelize-cli seed:generate --name seed_cities
npx sequelize-cli db:seed --seed 20230710132228-seed_countries.js
npx sequelize-cli db:seed --seed 20230710132345-seed_cities.js
npx sequelize-cli migration:generate --name create-skill
npx sequelize-cli seed:generate --name seed_skills
npx sequelize-cli db:seed --seed 20230711073857-seed_skills.js
npx sequelize-cli migration:generate --name create-employment-type
npx sequelize-cli seed:generate --name seed_employment_types
npx sequelize-cli db:seed --seed 20230711091055-seed_employment_types.js
...
npx sequelize-cli migration:generate --name create-resume
npx sequelize-cli migration:generate --name create-resume-employment-type
npx sequelize-cli db:migrate:undo
npx sequelize-cli migration:generate --name working-history
npx sequelize-cli migration:generate --name create-education
npx sequelize-cli migration:generate --name create-foreign-language
---l10
npm i bcrypt
npm i multer
---l11
npx sequelize-cli migration:generate --name create-specialization-type
npx sequelize-cli migration:generate --name create-specialization
web: https://dev.hh.ru/ > https://github.com/hhru/api/blob/master/docs/specializations.md > https://api.hh.ru/specializations
npx sequelize-cli seed:generate --name seed_specializations
web: https://beautifier.io/
npx sequelize-cli db:seed --seed 20230725143150-seed_specializations.js
npx sequelize-cli migration:generate --name create-experience
npx sequelize-cli seed:generate --name seed_experience
npx sequelize-cli db:seed --seed 20230726113117-seed_experience.js
npx sequelize-cli migration:generate --name create-vacancy
---l14
npx sequelize-cli migration:generate --name create-apply-model
---l16
https://www.digitalocean.com/try/free-trial-offer?utm_campaign=emea_brand_kw_en_cpc&utm_adgroup=digitalocean_credit_exact&_keyword=digitalocean%20free%20tier&_device=c&_adposition=&utm_content=conversion&utm_medium=cpc&utm_source=google&gad=1&gclid=Cj0KCQjwuNemBhCBARIsADp74QQ1j8cYQPPsAs_g9ydUHDnRojcqtJ0sQeKBd8s3uREJNhZRXG1haU8aAgD3EALw_wcB
https://cloud.digitalocean.com/droplets/369486588/graphs?i=297482&period=hour
ssh root@167.71.215.3
ls
cd ../
cd usr/
usr
cd ../home
cd
pwd
cd root
https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-ubuntu-20-04
	curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh
	curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
	source ~/.bashrc
	nvm install v18.17.0
node -v
npm -v
git clone https://github.com/ivannikovmn/20230609a-Decode-Headhunter.git
cd 20230609a-Decode-Headhunter
npm i
	npm start
npm run prod_localserver_windows
Чтобы заработала на ubuntu нужно:
	rm -rf node_modules
	rm package-lock.json
	npm install
	npm rebuild bcrypt --update-binary
	yarn install
	rm -rf node_modules/bcrypt
	npm install bcrypt
npm run prod_digitalocean_ubuntu
	git checkout -- package.json  # Discard changes to package.json
git pull
vi package.json
------
node
Date.now()
---l16
windows
	set NODE_ENV=production; sequelize-cli db:migrate - уже установлено
	set NODE_ENV=production; sequelize db:seed:all - говорит что роли есть, в сущности для теста запускал нет необходимости запускать т.к digitalocean ubuntu
ubuntu
	npm install -g sequelize-cli
	sequelize-cli db:migrate - не работает
	NODE_ENV=production sequelize-cli db:migrate
	NODE_ENV=production sequelize db:seed:all
https://pm2.keymetrics.io/
npm i pm2 -g
pm2 start "npm run prod_digitalocean_ubuntu" --name hh.kz_backend
pm2 logs
pm2 status
pm2 stop 0
pm2 restart 0
http://167.71.215.3:3000/api/region/cities
npm install cors

Termnal vsc(bash) (Git)
git init 
	.gitignore node_modules 
git add .
git commit -m "initial"
git remote add origin https://github.com/ivannikovmn/20230609a-Decode-Headhunter
	p.s git branch --move master main - переименовать master в main в visual code 
git push origin main
---
git add .
git commit -m "add RestAPI l-4 (user registration)"
git push origin main
---
git add .
git commit -m "add RestAPI l-5 (user authorization)"
git push origin main
---
git config --global --add safe.directory 'D:/'\!'nodejs/hh.kz'
---
git add .
git commit -m "add RestAPI l-6 (region[country, city], skills, employment-type, languages)"
git push origin main
---
git add .
git commit -m "add RestAPI l-7 (app resume-models and migrations for education, foreign language, resume, resume employment type, working history)"
git push origin main
---
git add .
git commit -m "add RestAPI l-8 (add resume)"
git push origin main
---
git add .
git commit -m "add RestAPI l-9 (resume: p1 list, p2 delete, p3 edit, end info for employee, fix 'if(req.body.educations && req.body.educations.length > 0){ > if(req.body.education && req.body.education.length > 0){'  in 'app > resume > controller')"
git push origin main
---
git add .
git commit -m "add RestAPI l-10(start for manager - l1-l3 registration, l4 - authorization, l5 - fix img)"
git push origin main
---
git add .
git commit -m "add RestAPI l-11(add vacancy, specializations), fix migrations"
git push origin main
-
git add .
git commit -m "add RestAPI l-12(list vacancy), fix resume > middlewares, fix CompanyId > companyId"
git push origin main
-
git add .
git commit -m "add RestAPI l-13(vacancy delete, edit, search)"
git push origin main
-
git add .
git commit -m "add RestAPI l-14(p1 vacancy search, p2-p4,p5[list],p6[delete] vacancy applies)"
git push origin main
-
git add .
git commit -m "add RestAPI l-15(p1 getEmployeeAplies include vacacncy, p2 invitation, p3 decline, p4 Apply, p5 notification mail, applies try catch)"
git push origin main
-
git add .
git commit -m "decode.kz first commit"
git push origin main
-
git add .
git commit -m "production mode configured"
git push origin main
-
git add .
git commit -m "postgre configs for sequelize-cli configured"
git push origin main
-
git add .
git commit -m "add RestAPI l-16(cors - white list)"
git push origin main

Темы
1. Урок приветствие и ER диаграмма
2. Установка PostgreSQL, PGAdmin и знакомство с базовыми командами SELECT UPDATE INSERT INTO DELETE
3. Создание базового сервера Разбор сериалзиации данных
4. Функционал регистрация Работника
5. Аторизация и Logout
6. Написание сидов для (Country, City, skills, education, Employment_types) foreign_language
7.
7. Добавление Резюме, получение списка резюме -> 8
8. Редактирование и Удаление Резюме
9. Регистрация работодателя
10. Авторизация работодателя
11. Добавление вакансии/получение списка вакансий
12. Редактирование вакансии и удаление
13. Получение полной информации о конкретном резюме/вакансии
14. Поиск вакансии по фильтрам
15. Создание отклика/Список откликов для соискателя/Удаление отклика
16. Список откликов для работодателя с возможностью фильтрации по статусам/Функционал ответа на отклик
17. Поиск резюме по фильтрам